      ******************************************************************
      * Author: MARIA ASPVIK
      * Date: 6 DEC 2021
      * Purpose: JUST FOR FUN
      ******************************************************************
       IDENTIFICATION DIVISION.
       PROGRAM-ID. SQUID-BINGO-1.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT BINGO-BOARDS ASSIGN TO "BOARDS1"
           ORGANIZATION IS SEQUENTIAL.
           SELECT BINGO-NUMBERS ASSIGN TO "NUMBERS1"
           ORGANIZATION IS SEQUENTIAL.
       DATA DIVISION.
       FILE SECTION.
        FD BINGO-BOARDS.
        01 BINGO-BOARD-ROWS.
           05 BINGO-BOARD-NEXT-ROW                 PIC X(15).
           05 BINGO-BOARD-LINEBREAK                PIC X.
      
        FD BINGO-NUMBERS.
        01 BINGO-NUMBERS-ROWS.
           05 BINGO-NUMBERS-NEXT-NUMBER            PIC XX.
           05 BINGO-NUMBERS-LINEBREAK              PIC X.

       WORKING-STORAGE SECTION.
       01 SWITCHES.
           05 BINGO-BOARDS-EOF-SWITCH              PIC X VALUE 'N'.
           05 BINGO-NUMBERS-EOF-SWITCH             PIC X VALUE 'N'.
           05 BINGO-FOUND-SWITCH                   PIC X VALUE 'N'.
      *
       01 COUNTERS.
           05 RECORD-COUNTER                       PIC 9(5) VALUE 99999.

       01 BINGO-BOARD-LIST OCCURS 1 TO 99999 TIMES
           DEPENDING ON RECORD-COUNTER
           INDEXED BY BINGO-BOARD-LIST-INDEX.
           05 BINGO-BOARD-LIST-ROWS OCCURS 5 TIMES
               INDEXED BY BINGO-BOARD-LIST-ROWS-INDEX.
               10 BINGO-BOARD-LIST-ROW             PIC 9(15) VALUE ZERO.
               10 BINGO-BOARD-LIST-COLUMNS 
                  REDEFINES BINGO-BOARD-LIST-ROW
                   OCCURS 5 TIMES
                   INDEXED BY BINGO-BOARD-LIST-COLUMNS-INDEX.
                   15 BINGO-BOARD-LIST-CELL        PIC 9(3).

       PROCEDURE DIVISION.
       MAIN-PROCEDURE.
            PERFORM READ-INPUT-BOARDS.
            DISPLAY "NUMBER OF BINGO BOARDS READ ==> " RECORD-COUNTER.
            GOBACK.
      *
       READ-INPUT-BOARDS.
           OPEN INPUT BINGO-BOARDS.
           SET BINGO-BOARD-LIST-INDEX TO 1.
           SET BINGO-BOARD-LIST-ROWS-INDEX TO 0.
           SET BINGO-BOARD-LIST-COLUMNS-INDEX TO 1.
           PERFORM READ-NEXT-BOARD 
              UNTIL BINGO-BOARDS-EOF-SWITCH = 'Y'.
           CLOSE BINGO-BOARDS.
           SET BINGO-BOARD-LIST-INDEX DOWN BY 1.
           SET RECORD-COUNTER TO BINGO-BOARD-LIST-INDEX.
      *
       READ-NEXT-BOARD.
           READ BINGO-BOARDS NEXT RECORD
           AT END MOVE 'Y' TO BINGO-BOARDS-EOF-SWITCH
           NOT AT END PERFORM INSERT-RECORD.
      *
       INSERT-RECORD.
           SET BINGO-BOARD-LIST-ROWS-INDEX UP BY 1.
           IF (NOT (BINGO-BOARD-NEXT-ROW = SPACE))
              MOVE BINGO-BOARD-NEXT-ROW 
              TO BINGO-BOARD-LIST-ROW(BINGO-BOARD-LIST-INDEX 
                 BINGO-BOARD-LIST-ROWS-INDEX)
              IF BINGO-BOARD-LIST-ROWS-INDEX 
                 IS GREATER THAN OR EQUAL TO 5
                 SET BINGO-BOARD-LIST-INDEX UP BY 1
                 SET BINGO-BOARD-LIST-ROWS-INDEX TO 0
              END-IF
           END-IF.

       END PROGRAM SQUID-BINGO-1.
